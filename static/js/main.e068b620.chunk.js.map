{"version":3,"sources":["actions.js","utils/Direction.js","hooks/useSwipe.js","hooks/useKeyboardArrows.js","hooks/useControls.js","utils/random.js","utils/FlowDirection.js","App.js","utils/block-utils.js","reducers/rootReducer.js","components/Grid/Row.js","utils/Maybe.js","components/Canvas/CanvasContext.js","utils/canvas.js","components/Canvas/Canvas.js","hooks/useCanvasCtx.js","components/Canvas/Rect.js","components/Canvas/Text.js","components/Canvas/index.js","components/Grid/Column.js","components/Grid/index.js","hooks/useReducer.js","serviceWorker.js","index.js"],"names":["Row","T","List","Record","number","Number","RootAction","Enum","MoveLeft","MoveRight","MoveUp","MoveDown","Direction","swipeDirection","cond","_ref","xVelocity","down","Left","_ref2","Right","_ref3","yVelocity","Up","_ref4","Down","Default","useSwipe","onSwipe","_useGesture","useGesture","transient","onAction","data","direction","Object","objectSpread","threshold","slicedToArray","keyDirection","equals","useKeyboardArrows","handler","useEffect","onKey","e","keyCode","match","_","window","addEventListener","removeEventListener","useControls","eventHandler","random","int","min","max","Math","floor","item","arr","length","FlowDirection","Forward","Reverse","concatArray","arr1","arr2","cata","concat","gridCount","Block","zero","mapIndexed","createPipe","getNumber","x","getFirstNumber","compose","head","getLastNumber","last","moveHorizontal","size","newBlock","newRow","row","index","toConsumableArray","slice","addBlock","map","getBlock","paddingLen","padding","range","padRow","chain","xs","groups","groupWith","eqProps","sumMatches","filter","moveVertical","transpose","grid","state","objectWithoutProperties","_ref5","Grid_Row","children","react_default","a","createElement","Fragment","Maybe","Just","Nothing","fmap","curry","fn","m","defaultValue","CanvasData","ctx","arguments","undefined","width","height","createContext","getSafeCanvasCtx","$canvas","getContext","startDrawing","save","beginPath","stopDrawing","setTransform","restore","draw","_len","fns","Array","_key","pipe","apply","setFontFamily","family","_$split","font","split","setFontSize","_$split3","setFill","fill","fillStyle","setAlignment","horizontal","vertical","textAlign","textBaseline","setFont","fontFamily","fontSize","color","verticalAlign","drawText","text","y","translate","fillText","drawRect","rect","Canvas","memo","props","_useCanvasCtx","initialCtx","_useState","useState","_useState2","setCanvasCtx","canvasRef","useRef","current","useCanvasCtx","_useCanvasCtx2","assign","ref","CanvasContext","Provider","value","Rect","useContext","renderRect","Text","_ref$textAlign","_ref$verticalAlign","renderText","getCoords","col","margin","Column","render","_ref2$row","_ref2$col","background","Grid","columns","key","Content","randomBlock","blockUtils","initialState","NumberBlock","block","log2","join","React","reducer","_useReducer","rootReducer","useReducer","action","_useReducer2","dispatch","handlers","App_NumberBlock","className","components_Canvas","Boolean","location","hostname","ReactDOM","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qOAEMA,EAAMC,IAAEC,KAAKD,IAAEE,OAAO,CAAEC,OAAQH,IAAEI,YASzBC,EAPIC,IAAK,CACtBC,SAAU,CAAER,GACZS,UAAW,CAAET,GACbU,OAAQ,CAAEV,GACVW,SAAU,CAAEX,qCCHCY,EAFGL,IAAK,CAAE,OAAQ,QAAS,KAAM,OAAQ,YCOlDM,EAAiBC,YAAK,CAC1B,CAAE,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAHD,EAAcE,KAAd,OAA0BD,EAJZ,GAIqC,kBAAMJ,EAAUM,SACrE,CAAE,SAAAC,GAAA,IAAGH,EAAHG,EAAGH,UAAHG,EAAcF,KAAd,OAAyBD,EALX,GAKqC,kBAAMJ,EAAUQ,UACrE,CAAE,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAHD,EAAcJ,KAAd,OAA0BK,EANZ,GAMqC,kBAAMV,EAAUW,OACrE,CAAE,SAAAC,GAAA,IAAGF,EAAHE,EAAGF,UAAHE,EAAcP,KAAd,OAAyBK,EAPX,GAOqC,kBAAMV,EAAUa,SACrE,CAAExB,IAAmD,kBAAMW,EAAUc,cAaxDC,EATE,SAAAC,GAAW,IAAAC,EACLC,YAAW,CAC9BC,WAAW,EACXC,SAAU,SAAAC,GAAI,OAAKA,EAAKhB,MAAQW,EAAQ,CAAEM,UAAWrB,EAAesB,OAAAC,EAAA,EAAAD,CAAA,GAAKF,EAAN,CAAYI,UAAW,UAG5F,OAN0BF,OAAAG,EAAA,EAAAH,CAAAN,EAAA,eCbtBU,EAAezB,YAAK,CACxB,CAAE0B,YAAO,IAAM,kBAAM5B,EAAUM,SAC/B,CAAEsB,YAAO,IAAM,kBAAM5B,EAAUQ,UAC/B,CAAEoB,YAAO,IAAM,kBAAM5B,EAAUW,OAC/B,CAAEiB,YAAO,IAAM,kBAAM5B,EAAUa,SAC/B,CAAExB,IAAa,kBAAMW,EAAUc,cAuBlBe,EAnBW,SAAAC,GAgBxB,OAfAC,oBAAU,WACR,IAAMC,EAAQ,SAAAC,GACZ,IAAMX,EAAYK,EAAaM,EAAEC,SAEjClC,EAAUmC,MAAMb,EAAW,CACzBR,QAAS,aACTsB,EAAG,kBAAMN,EAAQ,CAAER,kBAKvB,OADAe,OAAOC,iBAAiB,UAAWN,GAC5B,WACLK,OAAOE,oBAAoB,UAAWP,KAEvC,IACI,MCrBMQ,EANK,SAAAC,GAGlB,OAFAZ,EAAkBY,GACD1B,EAAS0B,ICLtBC,EAAS,CACbC,IAAK,SAACC,EAAKC,GAAN,OAAcC,KAAKC,MAAMD,KAAKJ,UAAYG,EAAMD,GAAOA,IAC5DI,KAAM,SAAAC,GAAG,OAAIA,EAAIP,EAAOC,IAAI,EAAGM,EAAIC,WAGtBR,4FCHTS,EAAgBxD,IAAK,CAAEyD,QAAS,GAAIC,QAAS,KAGnDF,EAAcG,YAAc,SAACC,EAAMC,GAAP,OAAgBL,EAAcM,KAAK,CAC7DL,QAAS,kBAAMG,EAAKG,OAAOF,IAC3BH,QAAS,kBAAMG,EAAKE,OAAOH,OAGdJ,ICUMQ,EDVNR,IELFS,EAAQ,SAAApE,GAAM,MAAK,CAAEA,WAGrBqE,EAAO,kBAAMD,EAAM,IAW1BE,EAAaC,qBAAW,OAGxBC,EAAY,SAAAC,GAAC,OAAIA,EAAEzE,QAEnB0E,EAAiBC,YAAQH,EAAWI,KAEpCC,EAAgBF,YAAQH,EAAWM,KA+B5BC,EAAiB,SAACC,EAAMlD,EAAWmD,GAAlB,OAA+BN,YAC3DL,EAPsB,SAACY,EAAQpD,GAAT,OAAuB,SAACqD,EAAKC,GAAN,OAAgBzB,EAAchB,MAAMb,EAAW,CAC5F8B,QAAS,kBAA6B,IAAvBiB,EAAcM,GAAdpD,OAAAsD,EAAA,EAAAtD,CAAgCoD,EAAIG,MAAM,EAAGH,EAAIzB,OAAS,IAA1DQ,OAAA,CAA8DgB,EAAOE,KAAWD,GAC/FtB,QAAS,kBAA8B,IAAxBa,EAAeS,GAAf,CAA8BD,EAAOE,IAArClB,OAAAnC,OAAAsD,EAAA,EAAAtD,CAAgDoD,EAAIG,MAAM,EAAGH,EAAIzB,UAAYyB,MAKjFI,CAASN,EAAUnD,IAC9B0D,YAhBoB,SAACR,EAAMlD,EAAW2D,GAAlB,OAA+B,SAAAN,GACnD,IAAMO,EAAaV,EAAOG,EAAIzB,OAC9B,GAAkB,IAAfgC,EAAkB,OAAOP,EAC5B,IAAMQ,EAAUC,YAAM,EAAGF,GAAYF,IAAIC,GACzC,OAAO9B,EAAcG,YAAYqB,EAAKQ,EAA/BhC,CAAwC7B,IAY3C+D,CAAOb,EAAMlD,EAAWuC,IAC5BmB,YA/BwB,SAAA1D,GAAS,OAAI6C,YACrCa,YAAIpB,GACJ0B,YAAM,SAAAC,GACJ,IAAMC,EAASJ,YAAM,EAAGtC,KAAKC,MAAMwC,EAAGrC,OAAS,IAC5C8B,IAAI,SAAAf,GAAC,OAAI,EAAIC,EAAeqB,KAE/B,OAAOA,EAAGrC,OAAS,EACfC,EAAcG,YAAYkC,EAAQ,CAACtB,EAAeqB,IAAlDpC,CAAwD7B,GACxDkE,IAENC,YAAUC,YAAQ,YAqBdC,CAAWrE,IACf0D,YAAIY,YAAO,SAAA5C,GAAI,OAAwB,IAApBgB,EAAUhB,QAIlB6C,EAAe,SAACrB,EAAMlD,EAAWoD,GAAlB,OAA6BP,YACvD2B,IACAvB,EAAeC,EAAMlD,EAAWoD,GAChCoB,aChEapG,IAAW+D,KAAK,CAC7B7D,SAAU,SAAA8E,GAAM,OAAI,SAAAvE,GAAA,IAAG4F,EAAH5F,EAAG4F,KAASC,EAAZzE,OAAA0E,EAAA,EAAA1E,CAAApB,EAAA,iBAAAoB,OAAAC,EAAA,EAAAD,CAAA,GACfyE,EADe,CAElBD,KAAMxB,EAAewB,EAAK7C,OAAQC,EAAcC,UAAWsB,EAArDH,CAA6DwB,OAErElG,UAAW,SAAA6E,GAAM,OAAI,SAAAnE,GAAA,IAAGwF,EAAHxF,EAAGwF,KAASC,EAAZzE,OAAA0E,EAAA,EAAA1E,CAAAhB,EAAA,iBAAAgB,OAAAC,EAAA,EAAAD,CAAA,GAChByE,EADgB,CAEnBD,KAAMxB,EAAewB,EAAK7C,OAAQC,EAAcE,UAAWqB,EAArDH,CAA6DwB,OAErEjG,OAAQ,SAAA4E,GAAM,OAAI,SAAAjE,GAAA,IAAGsF,EAAHtF,EAAGsF,KAASC,EAAZzE,OAAA0E,EAAA,EAAA1E,CAAAd,EAAA,iBAAAc,OAAAC,EAAA,EAAAD,CAAA,GACbyE,EADa,CAEhBD,KAAMF,EAAaE,EAAK7C,OAAQC,EAAcC,UAAWsB,EAAnDmB,CAA2DE,OAEnEhG,SAAU,SAAA2E,GAAM,OAAI,SAAA9D,GAAA,IAAGmF,EAAHnF,EAAGmF,KAASC,EAAZzE,OAAA0E,EAAA,EAAA1E,CAAAX,EAAA,iBAAAW,OAAAC,EAAA,EAAAD,CAAA,GACfyE,EADe,CAElBD,KAAMF,EAAaE,EAAK7C,OAAQC,EAAcE,UAAWqB,EAAnDmB,CAA2DE,OAEnE3D,EAAG,kBAAM,SAAA8D,KAAGH,KAAH,OAAAxE,OAAA0E,EAAA,EAAA1E,CAAA2E,EAAA,cCpBIC,EAAA,SAAAhG,GAAA,IAAGiG,EAAHjG,EAAGiG,SAAH,OAAkBC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KAAiBJ,YCE5CK,EAAQ9G,IAAK,CACjB+G,KAAM,CAAC,SACPC,QAAS,KAIEC,EAAOC,YAAM,SAACC,EAAIC,GAAL,OAAWN,EAAMtE,MAAM4E,EAAG,CAClDL,KAAM,SAAAzC,GAAC,OAAIwC,EAAMC,KAAKI,EAAG7C,KACzB0C,QAAS,kBAAMI,OASFN,IALKI,YAAM,SAACC,EAAIE,EAAcD,GAAnB,OAAyBN,EAAMtE,MAAM4E,EAAG,CAChEL,KAAM,SAAAzC,GAAC,OAAI6C,EAAG7C,IACd0C,QAAS,kBAAMK,OAGFP,GCjBFQ,GAAa,iBAAmD,CAAEC,IAArDC,UAAAjE,OAAA,QAAAkE,IAAAD,UAAA,GAAAA,UAAA,GAAOV,GAAME,UAA6CU,MAA1DF,UAAAjE,OAAA,QAAAkE,IAAAD,UAAA,GAAAA,UAAA,GAAgC,EAAiCG,OAAjEH,UAAAjE,OAAA,QAAAkE,IAAAD,UAAA,GAAAA,UAAA,GAA4C,IAEvDI,2BAAcN,eCFhBO,GAAmB,SAAAC,GAAO,OAAIA,EACvChB,GAAMC,KAAKe,EAAQC,WAAW,OAC9BjB,GAAME,WAGGgB,GAAe,SAAAT,GAG1B,OAFAA,EAAIU,OACJV,EAAIW,YACGX,GAIIY,GAAc,SAAAZ,GAGzB,OAFAA,EAAIa,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCb,EAAIc,UACGd,GAKIe,GAAO,mBAAAC,EAAAf,UAAAjE,OAAIiF,EAAJ,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAIF,EAAJE,GAAAlB,UAAAkB,GAAA,OAAYC,KAAIC,WAAJ,GAC9B3B,EAAKe,KADyBjE,OAAAnC,OAAAsD,EAAA,EAAAtD,CAE3B4G,EAAInD,IAAI,SAAA8B,GAAE,OAAIF,EAAKE,MAFQ,CAG9BF,EAAKkB,QAGMU,GAAgB3B,YAAM,SAAC4B,EAAQvB,GAAQ,IAAAwB,EACnC,GAAAhF,OAAGwD,EAAIyB,MAAOC,MAAM,KAA5BpE,EAD2CjD,OAAAG,EAAA,EAAAH,CAAAmH,EAAA,MAGlD,OADAxB,EAAIyB,KAAJ,GAAAjF,OAAcc,EAAd,KAAAd,OAAsB+E,GACfvB,IAGI2B,GAAchC,YAAM,SAACrC,EAAM0C,GAAQ,IAAA4B,EAC3B,GAAApF,OAAGwD,EAAIyB,MAAOC,MAAM,KAA9BH,EADqClH,OAAAG,EAAA,EAAAH,CAAAuH,EAAA,MAG9C,OADA5B,EAAIyB,KAAJ,GAAAjF,OAAcc,EAAd,KAAAd,OAAsB+E,GACfvB,IAGI6B,GAAUlC,YAAM,SAACmC,EAAM9B,GAElC,OADAA,EAAI+B,UAAYD,EACT9B,IAGIgC,GAAerC,YAAM,SAACsC,EAAYC,EAAUlC,GAGvD,OAFAA,EAAImC,UAAYF,EAChBjC,EAAIoC,aAAeF,EACZlC,IAGIqC,GAAU1C,YAAM,SAAA1G,EAA4D+G,GAA5D,IAAGsC,EAAHrJ,EAAGqJ,WAAYC,EAAftJ,EAAesJ,SAAUC,EAAzBvJ,EAAyBuJ,MAAOL,EAAhClJ,EAAgCkJ,UAAWM,EAA3CxJ,EAA2CwJ,cAA3C,OAC3BrB,aACES,GAAQW,GACRb,GAAYY,GACZjB,GAAcgB,GACdN,GAAaG,EAAWM,GAJ1BrB,CAKEpB,KAGS0C,GAAW/C,YAAM,SAACgD,EAAM5F,EAAG6F,EAAGzC,EAAOC,EAAQJ,GAIxD,OAHAA,EAAI6C,UAAU1C,EAAQ,EAAGC,EAAS,GAClCJ,EAAI8C,SAASH,EAAM5F,EAAG6F,GACtB5C,EAAIa,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GACzBb,IAGI+C,GAAWpD,YAAM,SAAC5C,EAAG6F,EAAGzC,EAAOC,EAAQJ,GAGlD,OAFAA,EAAIgD,KAAKjG,EAAG6F,EAAGzC,EAAOC,GACtBJ,EAAI8B,OACG9B,ICnEHiD,GAASC,eAAK,SAAAjK,GAA2C,IAAxCkH,EAAwClH,EAAxCkH,MAAOC,EAAiCnH,EAAjCmH,OAAQlB,EAAyBjG,EAAzBiG,SAAaiE,EAAY9I,OAAA0E,EAAA,EAAA1E,CAAApB,EAAA,+BAAAmK,ECD/D,WAAsC,IAAtBC,EAAsBpD,UAAAjE,OAAA,QAAAkE,IAAAD,UAAA,GAAAA,UAAA,GAAT,KAASqD,EACNC,mBAASjD,GAAiB+C,IADpBG,EAAAnJ,OAAAG,EAAA,EAAAH,CAAAiJ,EAAA,GAC5BtD,EAD4BwD,EAAA,GACvBC,EADuBD,EAAA,GAE9BE,EAAYC,mBAMlB,OAJA9I,oBAAU,WACR4I,EAAanD,GAAiBoD,EAAUE,WACvC,CAACF,IAEG,CAAEA,EAAW1D,GDNO6D,GADkCC,EAAAzJ,OAAAG,EAAA,EAAAH,CAAA+I,EAAA,GACrDM,EADqDI,EAAA,GAC1C9D,EAD0C8D,EAAA,GAG7D,OACE3E,EAAAC,EAAAC,cAAA,SAAAhF,OAAA0J,OAAA,CAAQ5D,MAAOA,EAAOC,OAAQA,GAAY+C,EAA1C,CAAiDa,IAAKN,IACpDvE,EAAAC,EAAAC,cAAC4E,GAAcC,SAAf,CAAwBC,MAAOpE,GAAWC,EAAKG,EAAOC,IACnDlB,MEAMkF,GAAA,SAAAjB,GAAS,IACdnD,EAAQqE,qBAAWJ,IAAnBjE,IAER,OARiB,SAAA/G,GAAA,IAAGkH,EAAHlH,EAAGkH,MAAOC,EAAVnH,EAAUmH,OAAQrD,EAAlB9D,EAAkB8D,EAAG6F,EAArB3J,EAAqB2J,EAAGd,EAAxB7I,EAAwB6I,KAAxB,OAAmCf,GACpDc,GAAQC,GACRiB,GAAShG,EAAG6F,EAAGzC,EAAOC,IAKtBkE,CAAWnB,EAAXmB,CAAkBtE,GACX,MCGMuE,GAAA,SAAApB,GAAS,IACdnD,EAAQqE,qBAAWJ,IAAnBjE,IAER,OAdiB,SAAA/G,GAAA,IACjB0J,EADiB1J,EACjB0J,KACAxC,EAFiBlH,EAEjBkH,MAAOC,EAFUnH,EAEVmH,OACPrD,EAHiB9D,EAGjB8D,EAAG6F,EAHc3J,EAGd2J,EACHJ,EAJiBvJ,EAIjBuJ,MAAOF,EAJUrJ,EAIVqJ,WAAYC,EAJFtJ,EAIEsJ,SAJFiC,EAAAvL,EAKjBkJ,iBALiB,IAAAqC,EAKL,SALKA,EAAAC,EAAAxL,EAKKwJ,cALL,OAMb1B,GACJsB,GAAQ,CAAEG,QAAOF,aAAYC,WAAUJ,YAAWM,mBAPjC,IAAAgC,EAKqB,SALrBA,IAQjB/B,GAASC,EAAM5F,EAAG6F,EAAGzC,EAAOC,IAK5BsE,CAAWvB,EAAXuB,CAAkB1E,GACX,MCdMiD,GJWAA,GKdT0B,GAAY,SAAA1L,GAAA,IAAGwE,EAAHxE,EAAGwE,IAAKmH,EAAR3L,EAAQ2L,IAAKtH,EAAbrE,EAAaqE,KAAMuH,EAAnB5L,EAAmB4L,OAAnB,MAAiC,CACjD9H,EAAG6H,GAAOtH,EAAOuH,GAAUA,EAC3BjC,EAAGnF,GAAOH,EAAOuH,GAAUA,IAGdC,GAAA,SAAAzL,GAAA,IAAG0L,EAAH1L,EAAG0L,OAAHC,EAAA3L,EAAWoE,WAAX,IAAAuH,EAAiB,EAAjBA,EAAAC,EAAA5L,EAAoBuL,WAApB,IAAAK,EAA0B,EAA1BA,EAA6BJ,EAA7BxL,EAA6BwL,OAAQvH,EAArCjE,EAAqCiE,KAAM4H,EAA3C7L,EAA2C6L,WAA3C,OACb/F,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAC+E,GAAD/J,OAAA0J,OAAA,GACMY,GAAU,CAAElH,MAAKmH,MAAKC,SAAQvH,SADpC,CAEE8C,OAAQ9C,EACR6C,MAAO7C,EACPwE,KAAMoD,KAEPH,EAAO1K,OAAAC,EAAA,EAAAD,CAAA,GAAKsK,GAAU,CAAElH,MAAKmH,MAAKC,SAAQvH,SAApC,CAA6CA,OAAMuH,cCX/CM,GAAA,SAAAlM,GAAA,IAAG4F,EAAH5F,EAAG4F,KAASsE,EAAZ9I,OAAA0E,EAAA,EAAA1E,CAAApB,EAAA,iBACbkG,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACGT,EAAKf,IAAI,SAACsH,EAAS3H,GAAV,OACR0B,EAAAC,EAAAC,cAACJ,EAAD,CAAKoG,IAAK5H,GACP2H,EAAQtH,IAAI,SAACwH,EAASV,GAAV,OACXzF,EAAAC,EAAAC,cAACyF,GAADzK,OAAA0J,OAAA,CAAQsB,IAAKT,EAAKnH,IAAKA,EAAKmH,IAAKA,EAAKG,OAAQO,GAAanC,WbS/DoC,GAAc,kBAAMC,EAAiBhK,EAAOM,KAAK,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAIxE2J,GAAe,CACnB5G,MAHmBpC,EAJF,EAIeyB,YAAM,EAAGzB,GAAWqB,IAAI,kBAAMI,YAAM,EAAGzB,GAAWqB,IAAIyH,QAMlFG,GAAc,SAAAzM,GAA2B,ICfvBX,EDeDqN,EAAwB1M,EAAxB0M,MAAOrI,EAAiBrE,EAAjBqE,KAAMP,EAAW9D,EAAX8D,EAAG6F,EAAQ3J,EAAR2J,EACrC,OACEzD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAC+E,GAAD,CACErH,EAAGA,EACH6F,EAAGA,EACHzC,MAAO7C,EACP8C,OAAQ9C,EACRwE,MCvBgBxJ,EDuBUqN,EAAMrN,OCvBK,IAAXA,EAC9B,qBAD8B,OAAAkE,OAEvB,IAAAA,OACJ,IAAaZ,KAAKgK,KAAKtN,GAAU,GAA1B,IACV,MACA,OACAuN,KAAK,KANyB,QDyB5B1G,EAAAC,EAAAC,cAACkF,GAAD,CACExH,EAAGA,EACH6F,EAAGA,EACHzC,MAAO7C,EACP8C,OAAQ9C,EACRqF,KAAMgD,EAAMrN,OACZiK,SAAU,GACVD,WAAW,YAMJwD,OAAM5C,KAAK,WAAM,IchDhB6C,EAASN,EdgDOO,GchDhBD,EdiDyBE,EcjDhBR,EdiD6BA,GcjDZS,qBAAW,SAACpH,EAAOqH,GAAR,OAAmBJ,EAAQI,EAARJ,CAAgBjH,IAAQ2G,IdgDhEW,EAAA/L,OAAAG,EAAA,EAAAH,CAAA2L,EAAA,GACtBlH,EADsBsH,EAAA,GACfC,EADeD,EAAA,GAOxBE,EAAWhL,EAAY,SAAAjC,GAAmB,IAAhBe,EAAgBf,EAAhBe,UACxBoD,EAASU,YAAM,EAzCN,GAyCqBJ,IAAI,kBAAM0H,EAAiB,KAC/DhI,EAAOhC,EAAOC,IAAI,EA1CH,IA0CqB+J,EAAiBhK,EAAOM,KAAK,CAAE,EAAG,EAAG,EAAG,KAE5EhD,EAAUmC,MAAMb,EAAW,CACzBR,QAAS,aACTR,KAAM,kBAAMiN,EAAS7N,EAAWE,SAAS8E,KACzClE,MAAO,kBAAM+M,EAAS7N,EAAWG,UAAU6E,KAC3C/D,GAAI,kBAAM4M,EAAS7N,EAAWI,OAAO4E,KACrC7D,KAAM,kBAAM0M,EAAS7N,EAAWK,SAAS2E,SAIvCqB,EAAOC,EAAMD,KAAKf,IAAI,SAAAL,GAAG,OAC7BA,EAAIK,IAAI,SAAA6H,GAAK,OAAI,SAAAxC,GAAK,OACpBhE,EAAAC,EAAAC,cAACkH,GAADlM,OAAA0J,OAAA,GAAiBZ,EAAjB,CAAwBwC,MAAOA,UAEnC,OACExG,EAAAC,EAAAC,cAAA,OAAKmH,UAAU,OACbrH,EAAAC,EAAAC,cAAA,UAAQmH,UAAU,cAAlB,QACArH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoH,GAADpM,OAAA0J,OAAA,CAAQ5D,MAvBK,IAuBcC,OAvBd,KAuBsCkG,GACjDnH,EAAAC,EAAAC,cAAC8F,GAAD,CAAMtG,KAAMA,EAAMvB,KA1BV,IA0ByBuH,OAzB1B,GAyB0CK,WAAY,cenEnDwB,QACW,cAA7BvL,OAAOwL,SAASC,UAEe,UAA7BzL,OAAOwL,SAASC,UAEhBzL,OAAOwL,SAASC,SAAS3L,MACvB,2DCZN4L,IAAS9B,OAAO5F,EAAAC,EAAAC,cAACyH,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e068b620.chunk.js","sourcesContent":["import Enum, { T } from 'enum-fp';\n\nconst Row = T.List(T.Record({ number: T.Number() }));\n\nconst RootAction = Enum({\n  MoveLeft: [ Row ],\n  MoveRight: [ Row ],\n  MoveUp: [ Row ],\n  MoveDown: [ Row ],\n});\n\nexport default RootAction;\n","import Enum from 'enum-fp';\n\n// :: Direction\nconst Direction = Enum([ 'Left', 'Right', 'Up', 'Down', 'Default' ]);\n\nexport default Direction;\n","import { useGesture } from 'react-with-gesture';\nimport { cond, T } from 'ramda';\n\nimport Direction from '../utils/Direction';\n\n// type GestureData = { xVelocity :: Number, yVelocity :: Number, threshold :: Number };\n\nconst THRESHOLD = 0;\n\n// swipeDirection :: GestureData -> Direction\nconst swipeDirection = cond([\n  [ ({ xVelocity, down }) => -xVelocity > THRESHOLD,   () => Direction.Left()    ],\n  [ ({ xVelocity, down }) => xVelocity > THRESHOLD,    () => Direction.Right()   ],\n  [ ({ yVelocity, down }) => -yVelocity > THRESHOLD,   () => Direction.Up()      ],\n  [ ({ yVelocity, down }) => yVelocity > THRESHOLD,    () => Direction.Down()    ],\n  [ T,                                                 () => Direction.Default() ],\n]);\n\n// (hook) useSwipe :: (() -> ()) -> [ Object (Event -> ()) ]\nconst useSwipe = onSwipe => {\n  const [ handlers ] = useGesture({\n    transient: true,\n    onAction: data => !data.down && onSwipe({ direction: swipeDirection({ ...data, threshold: 0 }) }),\n  });\n\n  return handlers;\n};\n\nexport default useSwipe;\n","import { useEffect } from 'react';\nimport { cond, equals, T } from 'ramda';\n\nimport Direction from '../utils/Direction';\n\n// keyDirection :: String -> Direction\nconst keyDirection = cond([\n  [ equals(37),  () => Direction.Left()    ],\n  [ equals(39),  () => Direction.Right()   ],\n  [ equals(38),  () => Direction.Up()      ],\n  [ equals(40),  () => Direction.Down()    ],\n  [ T,           () => Direction.Default() ],\n]);\n\n// (hook) useKeyboardArrows :: (() -> ()) -> ()\nconst useKeyboardArrows = handler => {\n  useEffect(() => {\n    const onKey = e => {\n      const direction = keyDirection(e.keyCode);\n\n      Direction.match(direction, {\n        Default: () => {},\n        _: () => handler({ direction }),\n      });\n    };\n\n    window.addEventListener('keydown', onKey);\n    return () => {\n      window.removeEventListener('keydown', onKey);\n    };\n  }, []);\n  return null;\n};\n\nexport default useKeyboardArrows;\n","import useSwipe from './useSwipe';\nimport useKeyboardArrows from './useKeyboardArrows';\n\n// (hook) useControls :: (() -> ()) -> [ Object (Event -> ()) ]\nconst useControls = eventHandler => {\n  useKeyboardArrows(eventHandler);\n  const handlers = useSwipe(eventHandler);\n  return handlers;\n};\n\nexport default useControls;\n","\nconst random = {\n  int: (min, max) => Math.floor(Math.random() * (max - min) + min),\n  item: arr => arr[random.int(0, arr.length)],\n};\n\nexport default random;\n","import Enum from 'enum-fp';\n\n// :: FlowDirection\nconst FlowDirection = Enum({ Forward: [], Reverse: [] });\n\n// FlowDirection.concatArray : ([a], [a]) -> [a]\nFlowDirection.concatArray = (arr1, arr2) => FlowDirection.cata({\n  Forward: () => arr1.concat(arr2),\n  Reverse: () => arr2.concat(arr1),\n});\n\nexport default FlowDirection;\n","import React from 'react';\nimport { range } from 'ramda';\n\nimport RootAction from './actions';\n\nimport useReducer from './hooks/useReducer';\nimport useControls from './hooks/useControls';\n\nimport random from './utils/random';\nimport * as blockUtils from './utils/block-utils';\nimport Direction from './utils/Direction';\n\nimport rootReducer from './reducers/rootReducer';\n\nimport Grid from './components/Grid';\nimport Canvas, { Rect, Text } from './components/Canvas';\n\nconst GRID_COUNT = 4;\n\nconst randomBlock = () => blockUtils.Block(random.item([ 0, 0, 0, 0, 0, 1, 2, 4 ]));\n\nconst generateGrid = gridCount => range(0, gridCount).map(() => range(0, gridCount).map(randomBlock));\n\nconst initialState = {\n  grid: generateGrid(GRID_COUNT),\n};\n\nconst NumberBlock = ({ block, size, x, y }) => {\n  return (\n    <React.Fragment>\n      <Rect\n        x={x}\n        y={y}\n        width={size}\n        height={size}\n        fill={blockUtils.getColor(block.number)}\n      />\n      <Text\n        x={x}\n        y={y}\n        width={size}\n        height={size}\n        text={block.number}\n        fontSize={16}\n        fontFamily=\"Arial\"\n      />\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(() => {\n  const [ state, dispatch ] = useReducer(rootReducer, initialState);\n\n  const boxSize = 100;\n  const margin = 10;\n  const canvasSize = (boxSize + margin) * GRID_COUNT + margin;\n\n  const handlers = useControls(({ direction }) => {\n    const newRow = range(0, GRID_COUNT).map(() => blockUtils.Block(0));\n    newRow[random.int(0, GRID_COUNT)] = blockUtils.Block(random.item([ 0, 1, 2, 4 ]));\n\n    Direction.match(direction, {\n      Default: () => {},\n      Left: () => dispatch(RootAction.MoveLeft(newRow)),\n      Right: () => dispatch(RootAction.MoveRight(newRow)),\n      Up: () => dispatch(RootAction.MoveUp(newRow)),\n      Down: () => dispatch(RootAction.MoveDown(newRow)),\n    });\n  });\n\n  const grid = state.grid.map(row =>\n    row.map(block => props =>\n      <NumberBlock {...props} block={block} />));\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">2048</header>\n      <div>\n        <Canvas width={canvasSize} height={canvasSize} {...handlers}>\n          <Grid grid={grid} size={boxSize} margin={margin} background={'#eee'} />\n        </Canvas>\n      </div>\n    </div>\n  );\n});\n","import { createPipe } from 'pipey';\nimport { range, compose, transpose, eqProps, head, last, map, chain, filter, groupWith } from 'ramda';\n\nimport FlowDirection from './FlowDirection';\n\n// :: Block\nexport const Block = number => ({ number });\n\n// zero :: () -> Block\nexport const zero = () => Block(0);\n\n// getColor :: Number -> String\nexport const getColor = number => number === 0\n  ? 'rgb(240, 240, 240)'\n  : `hsl(${[\n    `${150 + (10 * (Math.log2(number) % 10))}`,\n    '60%',\n    '58%',\n  ].join(',')})`;\n\nconst mapIndexed = createPipe('map');\n\n// getNumber :: Block -> Number\nconst getNumber = x => x.number;\n// getFirstNumber :: [Block] -> Number\nconst getFirstNumber = compose(getNumber, head);\n// getLastNumber :: [Block] -> Number\nconst getLastNumber = compose(getNumber, last);\n\n// sumMatches :: FlowDirection -> [Block] -> [Block]\nexport const sumMatches = direction => compose(\n  map(Block),\n  chain(xs => {\n    const groups = range(0, Math.floor(xs.length / 2))\n      .map(x => 2 * getFirstNumber(xs));\n\n    return xs.length % 2\n      ? FlowDirection.concatArray(groups, [getFirstNumber(xs)])(direction)\n      : groups;\n  }),\n  groupWith(eqProps('number')),\n);\n\n// padRow :: (Number, FlowDirection, () -> Block) -> [Block] -> [Block]\nexport const padRow = (size, direction, getBlock) => row => {\n  const paddingLen = size - row.length;\n  if(paddingLen === 0) return row;\n  const padding = range(0, paddingLen).map(getBlock);\n  return FlowDirection.concatArray(row, padding)(direction);\n};\n\n// addBlock :: ([Block], FlowDirection) -> ([Block], index) -> [Block]\nexport const addBlock = (newRow, direction) => (row, index) => FlowDirection.match(direction, {\n  Forward: () => getLastNumber(row) === 0 ? [ ...row.slice(0, row.length - 1), newRow[index] ] : row,\n  Reverse: () => getFirstNumber(row) === 0 ? [ newRow[index], ...row.slice(1, row.length) ] : row,\n});\n\n// moveHorizontal :: (Number, FlowDirection, [Block]) -> [[Block]] -> [[Block]]\nexport const moveHorizontal = (size, direction, newBlock) => compose(\n  mapIndexed(addBlock(newBlock, direction)),\n  map(padRow(size, direction, zero)),\n  map(sumMatches(direction)),\n  map(filter(item => getNumber(item) !== 0)),\n);\n\n// moveVertical :: (Number, FlowDirection, [Block]) -> [[Block]] -> [[Block]]\nexport const moveVertical = (size, direction, newRow) => compose(\n  transpose,\n  moveHorizontal(size, direction, newRow),\n  transpose,\n);\n","import RootAction from '../actions';\n\nimport FlowDirection from '../utils/FlowDirection';\nimport { moveHorizontal, moveVertical } from '../utils/block-utils';\n\nexport default RootAction.cata({\n  MoveLeft: newRow => ({ grid, ...state }) => ({\n    ...state,\n    grid: moveHorizontal(grid.length, FlowDirection.Forward(), newRow)(grid),\n  }),\n  MoveRight: newRow => ({ grid, ...state }) => ({\n    ...state,\n    grid: moveHorizontal(grid.length, FlowDirection.Reverse(), newRow)(grid),\n  }),\n  MoveUp: newRow => ({ grid, ...state }) => ({\n    ...state,\n    grid: moveVertical(grid.length, FlowDirection.Forward(), newRow)(grid),\n  }),\n  MoveDown: newRow => ({ grid, ...state }) => ({\n    ...state,\n    grid: moveVertical(grid.length, FlowDirection.Reverse(), newRow)(grid),\n  }),\n  _: () => ({ grid, ...state }) => state,\n});\n","import React from 'react';\n\nexport default ({ children }) => <React.Fragment>{children}</React.Fragment>;\n","import Enum from 'enum-fp';\nimport { curry } from 'ramda';\n\n// :: Maybe\nconst Maybe = Enum({\n  Just: ['value'],\n  Nothing: [],\n});\n\n// fmap :: (a -> b) -> Maybe a -> Maybe b\nexport const fmap = curry((fn, m) => Maybe.match(m, {\n  Just: x => Maybe.Just(fn(x)),\n  Nothing: () => m,\n}));\n\n// fold :: (a -> b) -> b -> Maybe a -> b\nexport const fold = curry((fn, defaultValue, m) => Maybe.match(m, {\n  Just: x => fn(x),\n  Nothing: () => defaultValue,\n}))\n\nexport default Maybe;\n","import { createContext } from 'react';\n\nimport Maybe from '../../utils/Maybe';\n\nexport const CanvasData = (ctx = Maybe.Nothing(), width = 0, height = 0) => ({ ctx, width, height });\n\nexport default createContext(CanvasData());\n\n","import Maybe, { fmap } from './Maybe';\nimport { curry, pipe } from 'ramda';\n\n// getSafeCanvasCtx :: HTMLCanvasElement -> Maybe CanvasRenderingContext2D\nexport const getSafeCanvasCtx = $canvas => $canvas\n  ? Maybe.Just($canvas.getContext('2d'))\n  : Maybe.Nothing();\n\n// startDrawing :: CanvasRenderingContext2D -> CanvasRenderingContext2D\nexport const startDrawing = ctx => {\n  ctx.save();\n  ctx.beginPath();\n  return ctx;\n};\n\n// stopDrawing :: CanvasRenderingContext2D -> CanvasRenderingContext2D\nexport const stopDrawing = ctx => {\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.restore();\n  return ctx;\n};\n\n// draw :: (...(CanvasRenderingContext2D -> CanvasRenderingContext2D))\n//      -> Maybe CanvasRenderingContext2D -> Maybe CanvasRenderingContext2D\nexport const draw = (...fns) => pipe(\n  fmap(startDrawing),\n  ...fns.map(fn => fmap(fn)),\n  fmap(stopDrawing),\n);\n\nexport const setFontFamily = curry((family, ctx) => {\n  const [size] = `${ctx.font}`.split(' ');\n  ctx.font = `${size} ${family}`;\n  return ctx;\n});\n\nexport const setFontSize = curry((size, ctx) => {\n  const [, family] = `${ctx.font}`.split(' ');\n  ctx.font = `${size} ${family}`;\n  return ctx;\n});\n\nexport const setFill = curry((fill, ctx) => {\n  ctx.fillStyle = fill;\n  return ctx;\n});\n\nexport const setAlignment = curry((horizontal, vertical, ctx) => {\n  ctx.textAlign = horizontal;\n  ctx.textBaseline = vertical;\n  return ctx;\n});\n\nexport const setFont = curry(({ fontFamily, fontSize, color, textAlign, verticalAlign }, ctx) =>\n  pipe(\n    setFill(color),\n    setFontSize(fontSize),\n    setFontFamily(fontFamily),\n    setAlignment(textAlign, verticalAlign),\n  )(ctx)\n);\n\nexport const drawText = curry((text, x, y, width, height, ctx) => {\n  ctx.translate(width / 2, height / 2);\n  ctx.fillText(text, x, y);\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  return ctx;\n});\n\nexport const drawRect = curry((x, y, width, height, ctx) => {\n  ctx.rect(x, y, width, height);\n  ctx.fill();\n  return ctx;\n});\n","import React, { memo } from 'react';\n\nimport CanvasContext, { CanvasData } from './CanvasContext';\nimport useCanvasCtx from '../../hooks/useCanvasCtx';\n\nconst Canvas = memo(({ width, height, children, ...props }) => {\n  const [ canvasRef, ctx ] = useCanvasCtx();\n\n  return (\n    <canvas width={width} height={height} {...props} ref={canvasRef}>\n      <CanvasContext.Provider value={CanvasData(ctx, width, height)}>\n        {children}\n      </CanvasContext.Provider>\n    </canvas>\n  );\n});\n\nexport default Canvas;\n","import { useRef, useState, useEffect } from 'react';\n\nimport { getSafeCanvasCtx } from '../utils/canvas';\n\nexport default (initialCtx = null) => {\n  const [ ctx, setCanvasCtx ] = useState(getSafeCanvasCtx(initialCtx));\n  const canvasRef = useRef();\n\n  useEffect(() => {\n    setCanvasCtx(getSafeCanvasCtx(canvasRef.current));\n  }, [canvasRef]);\n\n  return [ canvasRef, ctx ];\n};\n","import { useContext } from 'react';\n\nimport CanvasContext from './CanvasContext';\nimport { draw, drawRect, setFill } from '../../utils/canvas';\n\n// renderRect :: RectProps -> Maybe CanvasRenderingContext2D -> Maybe CanvasRenderingContext2D\nconst renderRect = ({ width, height, x, y, fill }) => draw(\n  setFill(fill),\n  drawRect(x, y, width, height),\n);\n\nexport default props => {\n  const { ctx } = useContext(CanvasContext);\n  renderRect(props)(ctx);\n  return null;\n};\n","import { useContext } from 'react';\n\nimport CanvasContext from './CanvasContext';\nimport { draw, setFont, drawText } from '../../utils/canvas';\n\n// renderText :: TextProps -> Maybe CanvasRenderingContext2D -> Maybe CanvasRenderingContext2D\nconst renderText = ({\n  text,\n  width, height,\n  x, y,\n  color, fontFamily, fontSize,\n  textAlign = \"center\", verticalAlign = \"middle\",\n}) => draw(\n  setFont({ color, fontFamily, fontSize, textAlign, verticalAlign }),\n  drawText(text, x, y, width, height),\n);\n\nexport default props => {\n  const { ctx } = useContext(CanvasContext);\n  renderText(props)(ctx);\n  return null;\n};\n","\nimport Canvas from './Canvas';\n\nexport { default as Rect } from './Rect';\nexport { default as Text } from './Text';\n\nexport default Canvas;\n","import React from 'react';\nimport { Rect } from '../Canvas';\n\nconst getCoords = ({ row, col, size, margin }) => ({\n  x: col * (size + margin) + margin,\n  y: row * (size + margin) + margin,\n});\n\nexport default ({ render, row = 0, col = 0, margin, size, background }) => (\n  <React.Fragment>\n    <Rect\n      {...getCoords({ row, col, margin, size })}\n      height={size}\n      width={size}\n      fill={background}\n    />\n    {render({ ...getCoords({ row, col, margin, size }), size, margin })}\n  </React.Fragment>\n);\n","import React from 'react';\n\nimport Row from './Row';\nimport Column from './Column';\n\nexport default ({ grid, ...props }) => (\n  <React.Fragment>\n    {grid.map((columns, row) => (\n      <Row key={row}>\n        {columns.map((Content, col) => (\n          <Column key={col} row={row} col={col} render={Content} {...props} />\n        ))}\n      </Row>\n    ))}\n  </React.Fragment>\n);\n","import { useReducer } from 'react';\n\nexport default (reducer, initialState) => useReducer((state, action) => reducer(action)(state), initialState);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}