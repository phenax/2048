{"version":3,"sources":["actions.js","utils/Direction.js","hooks/useSwipe.js","hooks/useKeyboardArrows.js","hooks/useControls.js","utils/random.js","utils/FlowDirection.js","reducers/rootReducer.js","utils/block-utils.js","utils/constants.js","components/Grid/Row.js","utils/Maybe.js","components/Canvas/CanvasContext.js","utils/canvas.js","components/Canvas/Canvas.js","hooks/useCanvasCtx.js","components/Canvas/Rect.js","components/Canvas/Text.js","components/Canvas/index.js","components/Grid/Column.js","components/Grid/index.js","components/NumberBlock.js","App.js","hooks/useReducer.js","serviceWorker.js","index.js"],"names":["Row","T","List","Record","number","Number","RootAction","Enum","MoveLeft","MoveRight","MoveUp","MoveDown","Direction","swipeDirection","cond","_ref","xVelocity","down","Left","_ref2","Right","_ref3","yVelocity","Up","_ref4","Down","Default","useSwipe","onSwipe","_useGesture","useGesture","transient","onAction","data","direction","Object","objectSpread","threshold","slicedToArray","keyDirection","equals","useKeyboardArrows","handler","useEffect","onKey","e","keyCode","match","_","window","addEventListener","removeEventListener","useControls","eventHandler","random","int","min","max","Math","floor","item","arr","length","FlowDirection","Forward","Reverse","concatArray","arr1","arr2","cata","concat","gridCount","Block","zero","randomBlock","compose","isZero","block","mapIndexed","createPipe","moveHorizontal","size","newBlock","newRow","row","index","last","toConsumableArray","slice","head","addBlock","map","getBlock","paddingLen","padding","range","padRow","chain","xs","_ref$number","groups","x","groupWith","eqProps","sumMatches","filter","complement","moveVertical","transpose","initialState","grid","state","objectWithoutProperties","_ref5","children","react_default","a","createElement","Fragment","Maybe","Just","Nothing","fmap","curry","fn","m","defaultValue","CanvasData","ctx","arguments","undefined","width","height","createContext","getSafeCanvasCtx","$canvas","getContext","startDrawing","save","beginPath","stopDrawing","setTransform","restore","draw","_len","fns","Array","_key","pipe","apply","setFontFamily","family","_$split","font","split","setFontSize","_$split3","setFill","fill","fillStyle","setAlignment","horizontal","vertical","textAlign","textBaseline","setFont","fontFamily","fontSize","color","verticalAlign","drawText","text","y","translate","fillText","drawRect","rect","Canvas","React","memo","props","_useCanvasCtx","initialCtx","_useState","useState","_useState2","setCanvasCtx","canvasRef","useRef","current","useCanvasCtx","_useCanvasCtx2","assign","ref","CanvasContext","Provider","value","Rect","useContext","renderRect","Text","_ref$textAlign","_ref$verticalAlign","renderText","getCoords","col","margin","Column","render","_ref2$row","_ref2$col","background","Canvas_Rect","Grid","columns","Grid_Row","key","Content","Grid_Column","NumberBlock","bounds","log2","join","Canvas_Text","toNumberGrid","components_NumberBlock","reducer","_useReducer","rootReducer","useReducer","action","_useReducer2","dispatch","handlers","blockUtils","generateRandomRow","className","components_Canvas","components_Grid","Boolean","location","hostname","ReactDOM","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.22c99c0f.chunk.js","sourcesContent":["import Enum, { T } from 'enum-fp';\n\nconst Row = T.List(T.Record({ number: T.Number() }));\n\nconst RootAction = Enum({\n  MoveLeft: [ Row ],\n  MoveRight: [ Row ],\n  MoveUp: [ Row ],\n  MoveDown: [ Row ],\n});\n\nexport default RootAction;\n","import Enum from 'enum-fp';\n\n// :: Direction\nconst Direction = Enum([ 'Left', 'Right', 'Up', 'Down', 'Default' ]);\n\nexport default Direction;\n","import { useGesture } from 'react-with-gesture';\nimport { cond, T } from 'ramda';\n\nimport Direction from '../utils/Direction';\n\n// type GestureData = { xVelocity :: Number, yVelocity :: Number, threshold :: Number };\n\nconst THRESHOLD = 0;\n\n// swipeDirection :: GestureData -> Direction\nconst swipeDirection = cond([\n  [ ({ xVelocity, down }) => -xVelocity > THRESHOLD,   () => Direction.Left()    ],\n  [ ({ xVelocity, down }) => xVelocity > THRESHOLD,    () => Direction.Right()   ],\n  [ ({ yVelocity, down }) => -yVelocity > THRESHOLD,   () => Direction.Up()      ],\n  [ ({ yVelocity, down }) => yVelocity > THRESHOLD,    () => Direction.Down()    ],\n  [ T,                                                 () => Direction.Default() ],\n]);\n\n// (hook) useSwipe :: (() -> ()) -> [ Object (Event -> ()) ]\nconst useSwipe = onSwipe => {\n  const [ handlers ] = useGesture({\n    transient: true,\n    onAction: data => !data.down && onSwipe({ direction: swipeDirection({ ...data, threshold: 0 }) }),\n  });\n\n  return handlers;\n};\n\nexport default useSwipe;\n","import { useEffect } from 'react';\nimport { cond, equals, T } from 'ramda';\n\nimport Direction from '../utils/Direction';\n\n// keyDirection :: String -> Direction\nconst keyDirection = cond([\n  [ equals(37),  () => Direction.Left()    ],\n  [ equals(39),  () => Direction.Right()   ],\n  [ equals(38),  () => Direction.Up()      ],\n  [ equals(40),  () => Direction.Down()    ],\n  [ T,           () => Direction.Default() ],\n]);\n\n// (hook) useKeyboardArrows :: (() -> ()) -> ()\nconst useKeyboardArrows = handler => {\n  useEffect(() => {\n    const onKey = e => {\n      const direction = keyDirection(e.keyCode);\n\n      Direction.match(direction, {\n        Default: () => {},\n        _: () => handler({ direction }),\n      });\n    };\n\n    window.addEventListener('keydown', onKey);\n    return () => {\n      window.removeEventListener('keydown', onKey);\n    };\n  }, []);\n  return null;\n};\n\nexport default useKeyboardArrows;\n","import useSwipe from './useSwipe';\nimport useKeyboardArrows from './useKeyboardArrows';\n\n// (hook) useControls :: (() -> ()) -> [ Object (Event -> ()) ]\nconst useControls = eventHandler => {\n  useKeyboardArrows(eventHandler);\n  const handlers = useSwipe(eventHandler);\n  return handlers;\n};\n\nexport default useControls;\n","\nconst random = {\n  int: (min, max) => Math.floor(Math.random() * (max - min) + min),\n  item: arr => arr[random.int(0, arr.length)],\n};\n\nexport default random;\n","import Enum from 'enum-fp';\n\n// :: FlowDirection\nconst FlowDirection = Enum({ Forward: [], Reverse: [] });\n\n// FlowDirection.concatArray : ([a], [a]) -> [a]\nFlowDirection.concatArray = (arr1, arr2) => FlowDirection.cata({\n  Forward: () => arr1.concat(arr2),\n  Reverse: () => arr2.concat(arr1),\n});\n\nexport default FlowDirection;\n","import { range } from 'ramda';\n\nimport RootAction from '../actions';\n\nimport FlowDirection from '../utils/FlowDirection';\nimport { moveHorizontal, moveVertical, randomBlock } from '../utils/block-utils';\nimport { GRID_COUNT } from '../utils/constants';\n\nconst generateGrid = gridCount =>\n  range(0, gridCount).map(() => range(0, gridCount).map(() => randomBlock([ 0, 0, 0, 0, 0, 1, 2, 4 ])));\n\nexport const initialState = {\n  grid: generateGrid(GRID_COUNT),\n};\n\nexport default RootAction.cata({\n  MoveLeft: newRow => ({ grid, ...state }) => ({\n    ...state,\n    grid: moveHorizontal(grid.length, FlowDirection.Forward(), newRow)(grid),\n  }),\n  MoveRight: newRow => ({ grid, ...state }) => ({\n    ...state,\n    grid: moveHorizontal(grid.length, FlowDirection.Reverse(), newRow)(grid),\n  }),\n  MoveUp: newRow => ({ grid, ...state }) => ({\n    ...state,\n    grid: moveVertical(grid.length, FlowDirection.Forward(), newRow)(grid),\n  }),\n  MoveDown: newRow => ({ grid, ...state }) => ({\n    ...state,\n    grid: moveVertical(grid.length, FlowDirection.Reverse(), newRow)(grid),\n  }),\n  _: () => ({ grid, ...state }) => state,\n});\n","import { createPipe } from 'pipey';\nimport { range, compose, transpose, eqProps, head, last, map, chain, filter, groupWith, complement } from 'ramda';\n\nimport random from './random';\nimport FlowDirection from './FlowDirection';\n\n// :: Block\nexport const Block = number => ({ number });\n\n// zero :: () -> Block\nexport const zero = () => Block(0);\n\n// randomBlock :: () -> Block\nexport const randomBlock = compose(Block, random.item);\n\n// isZero :: Block -> Boolean\nexport const isZero = block => block.number === 0;\n\n// getColor :: Number -> String\nexport const getColor = number => number === 0\n  ? 'rgb(240, 240, 240)'\n  : `hsl(${[\n    `${150 + (10 * (Math.log2(number) % 10))}`,\n    '50%',\n    '58%',\n  ].join(',')})`;\n\n// mapIndexed :: ((a, Number) -> b) -> [a] -> [b]\nconst mapIndexed = createPipe('map');\n\n// sumMatches :: FlowDirection -> [Block] -> [Block]\nexport const sumMatches = direction => compose(\n  map(Block),\n  chain(xs => {\n    const { number = 0 } = head(xs) || {};\n    const groups = range(0, Math.floor(xs.length / 2))\n      .map(x => 2 * number);\n\n    return xs.length % 2\n      ? FlowDirection.concatArray(groups, [number])(direction)\n      : groups;\n  }),\n  groupWith(eqProps('number')),\n);\n\n// padRow :: (Number, FlowDirection, () -> Block) -> [Block] -> [Block]\nexport const padRow = (size, direction, getBlock) => row => {\n  const paddingLen = size - row.length;\n  if(paddingLen <= 0) return row;\n  const padding = range(0, paddingLen).map(getBlock);\n  return FlowDirection.concatArray(row, padding)(direction);\n};\n\n// addBlock :: ([Block], FlowDirection) -> ([Block], index) -> [Block]\nexport const addBlock = (newRow, direction) => (row, index) => FlowDirection.match(direction, {\n  Forward: () => isZero(last(row)) ? [ ...row.slice(0, row.length - 1), newRow[index] ] : row,\n  Reverse: () => isZero(head(row)) ? [ newRow[index], ...row.slice(1, row.length) ] : row,\n});\n\n// moveHorizontal :: (Number, FlowDirection, [Block]) -> [[Block]] -> [[Block]]\nexport const moveHorizontal = (size, direction, newBlock) => compose(\n  mapIndexed(addBlock(newBlock, direction)),\n  map(padRow(size, direction, zero)),\n  map(sumMatches(direction)),\n  map(filter(complement(isZero))),\n);\n\n// moveVertical :: (Number, FlowDirection, [Block]) -> [[Block]] -> [[Block]]\nexport const moveVertical = (size, direction, newRow) => compose(\n  transpose,\n  moveHorizontal(size, direction, newRow),\n  transpose,\n);\n","\nexport const GRID_COUNT = 4;\n","import React from 'react';\n\nconst Row = ({ children }) => <React.Fragment>{children}</React.Fragment>;\n\nexport default Row;\n","import Enum from 'enum-fp';\nimport { curry } from 'ramda';\n\n// :: Maybe\nconst Maybe = Enum({\n  Just: ['value'],\n  Nothing: [],\n});\n\n// fmap :: (a -> b) -> Maybe a -> Maybe b\nexport const fmap = curry((fn, m) => Maybe.match(m, {\n  Just: x => Maybe.Just(fn(x)),\n  Nothing: () => m,\n}));\n\n// fold :: (a -> b) -> b -> Maybe a -> b\nexport const fold = curry((fn, defaultValue, m) => Maybe.match(m, {\n  Just: x => fn(x),\n  Nothing: () => defaultValue,\n}))\n\nexport default Maybe;\n","import { createContext } from 'react';\n\nimport Maybe from '../../utils/Maybe';\n\nexport const CanvasData = (ctx = Maybe.Nothing(), width = 0, height = 0) => ({ ctx, width, height });\n\nexport default createContext(CanvasData());\n\n","import Maybe, { fmap } from './Maybe';\nimport { curry, pipe } from 'ramda';\n\n// getSafeCanvasCtx :: HTMLCanvasElement -> Maybe CanvasRenderingContext2D\nexport const getSafeCanvasCtx = $canvas => $canvas\n  ? Maybe.Just($canvas.getContext('2d'))\n  : Maybe.Nothing();\n\n// startDrawing :: CanvasRenderingContext2D -> CanvasRenderingContext2D\nexport const startDrawing = ctx => {\n  ctx.save();\n  ctx.beginPath();\n  return ctx;\n};\n\n// stopDrawing :: CanvasRenderingContext2D -> CanvasRenderingContext2D\nexport const stopDrawing = ctx => {\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.restore();\n  return ctx;\n};\n\n// draw :: (...(CanvasRenderingContext2D -> CanvasRenderingContext2D))\n//      -> Maybe CanvasRenderingContext2D -> Maybe CanvasRenderingContext2D\nexport const draw = (...fns) => pipe(\n  fmap(startDrawing),\n  ...fns.map(fn => fmap(fn)),\n  fmap(stopDrawing),\n);\n\nexport const setFontFamily = curry((family, ctx) => {\n  const [size] = `${ctx.font}`.split(' ');\n  ctx.font = `${size} ${family}`;\n  return ctx;\n});\n\nexport const setFontSize = curry((size, ctx) => {\n  const [, family] = `${ctx.font}`.split(' ');\n  ctx.font = `${size} ${family}`;\n  return ctx;\n});\n\nexport const setFill = curry((fill, ctx) => {\n  ctx.fillStyle = fill;\n  return ctx;\n});\n\nexport const setAlignment = curry((horizontal, vertical, ctx) => {\n  ctx.textAlign = horizontal;\n  ctx.textBaseline = vertical;\n  return ctx;\n});\n\nexport const setFont = curry(({ fontFamily, fontSize, color, textAlign, verticalAlign }, ctx) =>\n  pipe(\n    setFill(color),\n    setFontSize(fontSize),\n    setFontFamily(fontFamily),\n    setAlignment(textAlign, verticalAlign),\n  )(ctx)\n);\n\nexport const drawText = curry((text, x, y, width, height, ctx) => {\n  ctx.translate(width / 2, height / 2);\n  ctx.fillText(text, x, y);\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  return ctx;\n});\n\nexport const drawRect = curry((x, y, width, height, ctx) => {\n  ctx.rect(x, y, width, height);\n  ctx.fill();\n  return ctx;\n});\n","import React from 'react';\n\nimport CanvasContext, { CanvasData } from './CanvasContext';\nimport useCanvasCtx from '../../hooks/useCanvasCtx';\n\nconst Canvas = React.memo(({ width, height, children, ...props }) => {\n  const [ canvasRef, ctx ] = useCanvasCtx();\n\n  return (\n    <canvas width={width} height={height} {...props} ref={canvasRef}>\n      <CanvasContext.Provider value={CanvasData(ctx, width, height)}>\n        {children}\n      </CanvasContext.Provider>\n    </canvas>\n  );\n});\n\nexport default Canvas;\n","import { useRef, useState, useEffect } from 'react';\n\nimport { getSafeCanvasCtx } from '../utils/canvas';\n\nexport default (initialCtx = null) => {\n  const [ ctx, setCanvasCtx ] = useState(getSafeCanvasCtx(initialCtx));\n  const canvasRef = useRef();\n\n  useEffect(() => {\n    setCanvasCtx(getSafeCanvasCtx(canvasRef.current));\n  }, [canvasRef]);\n\n  return [ canvasRef, ctx ];\n};\n","import React, { useContext } from 'react';\n\nimport CanvasContext from './CanvasContext';\nimport { draw, drawRect, setFill } from '../../utils/canvas';\n\n// renderRect :: RectProps -> Maybe CanvasRenderingContext2D -> Maybe CanvasRenderingContext2D\nconst renderRect = ({ width, height, x, y, fill }) => draw(\n  setFill(fill),\n  drawRect(x, y, width, height),\n);\n\nconst Rect = React.memo(props => {\n  const { ctx } = useContext(CanvasContext);\n  renderRect(props)(ctx);\n  return null;\n});\n\nexport default Rect;\n","import React, { useContext } from 'react';\n\nimport CanvasContext from './CanvasContext';\nimport { draw, setFont, drawText } from '../../utils/canvas';\n\n// renderText :: TextProps -> Maybe CanvasRenderingContext2D -> Maybe CanvasRenderingContext2D\nconst renderText = ({\n  text,\n  width, height,\n  x, y,\n  color, fontFamily, fontSize,\n  textAlign = \"center\", verticalAlign = \"middle\",\n}) => draw(\n  setFont({ color, fontFamily, fontSize, textAlign, verticalAlign }),\n  drawText(text, x, y, width, height),\n);\n\nconst Text = React.memo(props => {\n  const { ctx } = useContext(CanvasContext);\n  renderText(props)(ctx);\n  return null;\n});\n\nexport default Text;\n","\nimport Canvas from './Canvas';\n\nexport { default as Rect } from './Rect';\nexport { default as Text } from './Text';\n\nexport default Canvas;\n","import React from 'react';\nimport { Rect } from '../Canvas';\n\nconst getCoords = ({ row, col, size, margin }) => ({\n  x: col * (size + margin) + margin,\n  y: row * (size + margin) + margin,\n});\n\nconst Column = ({ render, row = 0, col = 0, margin, size, background }) => (\n  <React.Fragment>\n    <Rect\n      {...getCoords({ row, col, margin, size })}\n      height={size}\n      width={size}\n      fill={background}\n    />\n    {render({ ...getCoords({ row, col, margin, size }), size, margin })}\n  </React.Fragment>\n);\n\nexport default Column;\n","import React from 'react';\n\nimport Row from './Row';\nimport Column from './Column';\n\nconst Grid = ({ grid, ...props }) => (\n  <React.Fragment>\n    {grid.map((columns, row) => (\n      <Row key={row}>\n        {columns.map((Content, col) => (\n          <Column key={col} row={row} col={col} render={Content} {...props} />\n        ))}\n      </Row>\n    ))}\n  </React.Fragment>\n);\n\nexport default Grid;\n","import React from 'react';\nimport { Rect, Text } from './Canvas';\nimport { getColor, isZero } from '../utils/block-utils';\n\nconst NumberBlock = ({ block, size, x, y }) => {\n  const bounds = { x, y, width: size, height: size };\n  return (\n    <React.Fragment>\n      <Rect {...bounds} fill={getColor(block.number)} />\n      {!isZero(block) && <Text\n        {...bounds}\n        text={block.number}\n        color=\"#333\"\n        fontSize={25}\n        fontFamily=\"Arial\"\n      />}\n    </React.Fragment>\n  );\n};\n\nexport default NumberBlock;\n","import React from 'react';\nimport { range, map } from 'ramda';\n\nimport RootAction from './actions';\n\nimport useReducer from './hooks/useReducer';\nimport useControls from './hooks/useControls';\n\nimport random from './utils/random';\nimport * as blockUtils from './utils/block-utils';\nimport Direction from './utils/Direction';\nimport { GRID_COUNT } from './utils/constants';\n\nimport rootReducer, { initialState } from './reducers/rootReducer';\n\nimport Grid from './components/Grid';\nimport Canvas from './components/Canvas';\nimport NumberBlock from './components/NumberBlock';\n\n// toNumberGrid :: [[Block]] -> [[React.Component]]\nconst toNumberGrid =\n  map(map(block => props => <NumberBlock {...props} block={block} />));\n\n// generateRandomRow :: () -> [Block]\nconst generateRandomRow = () => {\n  const newRow = range(0, GRID_COUNT).map(blockUtils.zero);\n  newRow[random.int(0, GRID_COUNT)] = blockUtils.randomBlock([ 0, 1, 2, 4 ]);\n  return newRow;\n};\n\nexport default React.memo(() => {\n  const [ state, dispatch ] = useReducer(rootReducer, initialState);\n\n  const handlers = useControls(({ direction }) => {\n    const newRow = generateRandomRow();\n\n    Direction.match(direction, {\n      Default: () => {},\n      Left: () => dispatch(RootAction.MoveLeft(newRow)),\n      Right: () => dispatch(RootAction.MoveRight(newRow)),\n      Up: () => dispatch(RootAction.MoveUp(newRow)),\n      Down: () => dispatch(RootAction.MoveDown(newRow)),\n    });\n  });\n\n  const boxSize = 100;\n  const margin = 10;\n  const canvasSize = (boxSize + margin) * GRID_COUNT + margin;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">2048</header>\n      <div>\n        <Canvas width={canvasSize} height={canvasSize} {...handlers}>\n          <Grid\n            grid={toNumberGrid(state.grid)}\n            size={boxSize}\n            margin={margin}\n          />\n        </Canvas>\n      </div>\n    </div>\n  );\n});\n","import { useReducer } from 'react';\n\nexport default (reducer, initialState) => useReducer((state, action) => reducer(action)(state), initialState);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}